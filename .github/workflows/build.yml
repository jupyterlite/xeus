name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install Conda environment with Micromamba
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: xeus-lite-dev
        environment-file: environment-dev.yaml

    - name: Lint JS
      run: |
        set -eux
        jlpm
        jlpm run lint:check

    - name: Lint Python
      run: ruff check --output-format=github jupyterlite_xeus

    - name: Build the extension
      run: |
        set -eux
        python -m pip install .[test]

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "@jupyterlite/xeus.*OK"
        # TODO: re-enable?
        # python -m jupyterlab.browser_check

    - name: Package the extension
      run: |
        set -eux

        pip install build
        python -m build
        pip uninstall -y "jupyterlite_xeus" jupyterlab

    - name: Upload extension packages
      uses: actions/upload-artifact@v4
      with:
        name: extension-artifacts
        path: dist/jupyterlite_xeus*
        if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        architecture: 'x64'
    - uses: actions/download-artifact@v4
      with:
        name: extension-artifacts
    - name: Install and Test
      run: |
        set -eux
        # Remove NodeJS, twice to take care of system and locally installed node versions.
        sudo rm -rf $(which node)
        sudo rm -rf $(which node)

        pip install "jupyterlab>=4.0.0,<4.3" jupyterlite_xeus*.whl

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "@jupyterlite/xeus.*OK"
        python -m jupyterlab.browser_check --no-browser-test

  python-tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: extension-artifacts

      - name: Install mamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment-dev.yaml
          environment-name: xeus-lite-dev

      - name: Install
        run: pip install jupyterlite_xeus*.whl

      - name: Run tests
        run: pytest -rP test_xeus.py
        working-directory: tests

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # try the latest stable and potential pre-releases
        jupyterlite_version: ["jupyterlite-core -U", "jupyterlite-core -U --pre"]
        project: ["default", "crossoriginisolated"]
        # the latest stable release is not compatible for now
        exclude:
          - jupyterlite_version: "jupyterlite-core -U"
            project: "crossoriginisolated"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: extension-artifacts

    - name: Install Conda environment with Micromamba
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: test-env
        create-args: >-
          pip

    - name: Install the extension
      run: |
        set -eux
        python -m pip install "jupyterlab>=4.0.0,<4.3"  jupyterlite_xeus*.whl
        python -m pip install ${{ matrix.jupyterlite_version }}

    - name: Install dependencies
      working-directory: ui-tests
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: 0
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      run: |
        jlpm install
        jlpm run build

    - name: Install browser
      run: jlpm playwright install chromium
      working-directory: ui-tests

    - name: Execute integration tests
      working-directory: ui-tests
      run: |
        jlpm playwright test --project ${{ matrix.project }}

    - name: Upload Playwright Test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jupyterlite-xeus-playwright-tests (${{ matrix.jupyterlite_version }}, ${{ matrix.project }})
        path: |
          ui-tests/test-results
          ui-tests/playwright-report

  check_links:
    name: Check Links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
